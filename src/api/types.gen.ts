// This file is auto-generated by @hey-api/openapi-ts

export type CreateProductOrderRequest = {
    ids: Array<number>;
};

export type DownloadProductOrderRequest = {
    id: number;
};

export type Employee = {
    username: string;
    id: number;
};

export type EmployeeList = {
    employees: Array<Employee>;
};

export type FileResponse = {
    file: string;
    fileName: string;
    fileType: string;
};

export type FinishProductRequest = {
    id: number;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type LoginResponse = {
    permission: number;
    name: string;
    ok?: boolean;
};

export type OkResponseSchema = {
    ok: boolean;
    message?: string;
};

export type PaginationRequest = {
    page: number;
    perPage: number;
};

export type PaginationResponse = {
    rowCount: number;
};

export type ProductEditRequest = {
    name: string;
    description: string;
    price: number;
    article: string;
    quantity: number;
};

export type ProductItem = {
    id: number;
    name: string;
    description: string;
    price: number;
    article: string;
    quantity: number;
};

export type ProductList = {
    products: Array<ProductItem>;
    paginationInfo: PaginationResponse;
};

export type ProductListFilter = {
    keyword?: string;
    pagination: PaginationRequest;
};

export type ProductOrderItem = {
    id: number;
    date: string;
    username: string;
    income: number;
    price: number;
    finished: boolean;
};

export type ProductOrderResponse = {
    items: Array<ProductOrderItem>;
    paginationInfo: PaginationResponse;
};

export type ProductOrdersRequest = {
    keyword?: string;
    pagination: PaginationRequest;
};

export type SalesItem = {
    id: number;
    productName: string;
    price: number;
    quantity: number;
    income: number;
};

export type SalesRequest = {
    article: string;
    quantity: number;
    price: number;
    userId: number;
    income: number;
};

export type SalesUserResponse = {
    items: Array<SalesItem>;
};

export type UserDataRequest = {
    username: string;
    password: string;
    permission: number;
};

export type UserList = {
    users: Array<UserDataRequest>;
    paginationInfo: PaginationResponse;
};

export type UserListFilter = {
    keyword?: string;
    permission?: number | null;
    pagination: PaginationRequest;
};

export type UserLogin = {
    username: string;
    password: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type LoginUserData = {
    body: UserLogin;
};

export type LoginUserResponse = LoginResponse;

export type LoginUserError = HTTPValidationError;

export type CreateUserData = {
    body: UserDataRequest;
};

export type CreateUserResponse = OkResponseSchema;

export type CreateUserError = HTTPValidationError;

export type ListUsersData = {
    body: UserListFilter;
};

export type ListUsersResponse = UserList;

export type ListUsersError = HTTPValidationError;

export type EditUserData = {
    body: UserDataRequest;
};

export type EditUserResponse = OkResponseSchema;

export type EditUserError = HTTPValidationError;

export type ListEmployeesResponse = EmployeeList;

export type ListEmployeesError = unknown;

export type GetProductsListData = {
    body: ProductListFilter;
};

export type GetProductsListResponse = ProductList;

export type GetProductsListError = HTTPValidationError;

export type CreateProductData = {
    body: ProductEditRequest;
};

export type CreateProductResponse = OkResponseSchema;

export type CreateProductError = HTTPValidationError;

export type EditProductData = {
    body: ProductEditRequest;
};

export type EditProductResponse = OkResponseSchema;

export type EditProductError = HTTPValidationError;

export type CreateSalesRequestData = {
    body: SalesRequest;
};

export type CreateSalesRequestResponse = OkResponseSchema;

export type CreateSalesRequestError = HTTPValidationError;

export type ListProductOrdersData = {
    body: ProductOrdersRequest;
};

export type ListProductOrdersResponse = ProductOrderResponse;

export type ListProductOrdersError = HTTPValidationError;

export type FinishOrderData = {
    body: FinishProductRequest;
};

export type FinishOrderResponse = OkResponseSchema;

export type FinishOrderError = HTTPValidationError;

export type GetOrderPdfData = {
    body: DownloadProductOrderRequest;
};

export type GetOrderPdfResponse = FileResponse;

export type GetOrderPdfError = HTTPValidationError;

export type GetSalesListResponse = SalesUserResponse;

export type GetSalesListError = unknown;

export type CreateOrderData = {
    body: CreateProductOrderRequest;
};

export type CreateOrderResponse = OkResponseSchema;

export type CreateOrderError = HTTPValidationError;
